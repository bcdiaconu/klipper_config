[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.FIRST_LAYER_BED_TEMP|default(60)|float %}
    # {% set BED_TEMP_FIRST_LAYER = params.BED_TEMP_FIRST_LAYER|BED_TEMP %}
    {% set EXTRUDER_TEMP = params.FIRST_LAYER_NOZZLE_TEMP|default(200)|float %}
    {% set NO_OOZE_TEMP = 120|int %}

    # Start bed heating
    M117 Set bed to {BED_TEMP}
    M140 S{BED_TEMP}
    # use absolute coordinates
    G90
    # extruder relative mode
    M83
    # set temporary nozzle temp to prevent oozing during homing and auto bed leveling
    M117 Set nozzle to temporary {NO_OOZE_TEMP}
    M104 S{NO_OOZE_TEMP}
    # Reset the G-Code Z offset (adjust Z offset if needed)
    # SET_GCODE_OFFSET Z=0.0
    # Wait for bed to reach temperature
    M117 Wait bed to reach temperature
    M190 S{BED_TEMP}
    # Home the printer
    M117 Homing axes
    G28
    # get bed mesh
    BED_MESH_PROFILE LOAD="CrealityGlass"
    # move to home location
    M117 Set nozzle final temperature
    M104 S{EXTRUDER_TEMP}
    G0 X5 Y-22 Z10
    # Set and wait for nozzle to reach temperature
    M117 Wait nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
		# goto
    M117 Prime nozzle
    G0 X10 Y10 Z0.28 F240   ; move to start priming position
    G92 E0                  ; reset extruder reference
    # prime the nozzle
    G1 Y140 E10 F1500       ; prime primary line
    G91                     ; use relative positioning system
    # move to right for second line
    G1 X2.3 F5000           ; move 2.3 mm to right (if G91 is set)
    G92 E0                  ; reset extruder reference
    # prime more the nozzle
    G90                     ; use absolute positioning system
    G1 Y10 E10 F1200        ; prime secondary line
    G92 E0                  ; reset extruder reference
    # use absolute coordinates
    G90
    # start printing
    M117 Started printing the part

[gcode_macro END_PRINT]
gcode:
    # {% set MAX_LAYER_Z = params.MAX_LAYER_Z|default(60)|float %}
    # {% set Z_OFFSET = params.Z_OFFSET|default(60)|float %}

    # # move print head up
    # {if MAX_LAYER_Z < printer.stepper_z.position_max}G1 Z{Z_OFFSET+min(MAX_LAYER_Z+2, printer.stepper_z.position_max)} F600
    # # present print
    # G1 X5 Y{printer.stepper_y.position_max*0.8} F{travel_speed*60}
    # # move print head further up{endif}
    # {if MAX_LAYER_Z < printer.stepper_z.position_max-10}G1 Z{Z_OFFSET+min(MAX_LAYER_Z+70, printer.stepper_z.position_max-10)} F600
    # # move print head further up{endif}
    # {if MAX_LAYER_Z < printer.stepper_z.position_max*0.6}G1 Z{printer.stepper_z.position_max*0.6} F600
    # # turn off heatbed
    # M140 S0
    # # turn off temperature
    # M104 S0
    # # turn off fan
    # M107
    # M84 X Y E		

    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
